@using HNTAS.Web.UI.Models.Address
@model AddressLookUpModel  

@{  
    ViewData["Title"] = "Find an address";  
    var hasAddresses = Model?.Addresses != null && Model.Addresses.Length != 0;  
}  

<div class="govuk-width-container">  
    <form asp-controller="Address" asp-action="@(hasAddresses ? "SelectAddress" : "FindAddress")" method="get" class="govuk-form-group">  
        <h1 class="govuk-heading-l">Find an address</h1>  
        @if (!ViewData.ModelState.IsValid)  
        {  
            <div class="govuk-error-summary" role="alert">  
                <h2 class="govuk-error-summary__title">There is a problem</h2>  
                <ul class="govuk-list govuk-error-summary__list">  
                    @foreach (var entry in ViewData.ModelState)  
                    {  
                        foreach (var error in entry.Value.Errors)  
                        {  
                            <li id="@entry.Key-error" class="govuk-error-message">  
                                <a href="#@entry.Key-error"> @error.ErrorMessage </a>  
                            </li>  
                        }  
                    }  
                </ul>  
            </div>  
        }  
        <div class="govuk-form-group @(ViewData.ModelState["Postcode"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">  
            <label class="govuk-label" for="Postcode">Postcode</label>  
            <div id="postcode-hint" class="govuk-hint">For example, AA3 1AB.</div>  
            @if (ViewData.ModelState["Postcode"]?.Errors.Count > 0)  
            {  
                <span class="govuk-error-message">  
                    <span class="govuk-visually-hidden">Error:</span>  
                    @ViewData.ModelState["Postcode"]?.Errors.FirstOrDefault()?.ErrorMessage  
                </span>  
            }  
            <input class="govuk-input govuk-input--width-5" id="Postcode" name="Postcode" type="text" value="@Model?.Postcode" spellcheck="false" autocomplete="off" aria-describedby="postcode-hint">  
        </div>  
        @if (hasAddresses)  
        {  
            <div class="govuk-form-group">  
                <label class="govuk-label" for="addresses">  
                    Select your address  
                </label>  
                <select class="govuk-select" id="Fulladdress" name="Fulladdress" onchange="onAddressSelected(this)">  
                    <option value="helpertext" selected>Select your address</option>  
                    @foreach (var address in Model.Addresses)  
                    {  
                        <option value="@address">@address</option>
                    }     
                </select>  
            </div>  
        }  

        <br />  
        <button type="submit"  
                name="action"  
                value="@(hasAddresses ? "Next" : "FindAddress")"  
                class="govuk-button"  
                data-module="govuk-button">  
            @(hasAddresses ? "Next" : "Find address")  
        </button>  
    </form>  
</div>


@using HNTAS.Web.UI.Models.Address
@model ManualAddressModel

@{
    ViewData["Title"] = "Enter your address manually";
}

@{
    // List the property names in the order they appear on the form
    var fieldOrder = new[] { nameof(Model.AddressLine1), nameof(Model.AddressTown), nameof(Model.Postcode) };
}

@* Display the GOV.UK error summary if there are any validation errors *@
@if (!ViewData.ModelState.IsValid)
{
    <div class="govuk-error-summary" role="alert" aria-labelledby="error-summary-title" tabindex="-1">
        <h2 class="govuk-error-summary__title" id="error-summary-title">There is a problem</h2>
        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
                @foreach (var field in fieldOrder)
                {
                    if (ViewData.ModelState.ContainsKey(field) && ViewData.ModelState[field].Errors.Any())
                    {
                        <li>
                            <a href="#@(Html.GenerateIdFromName(field).ToLowerInvariant())">
                                @ViewData.ModelState[field].Errors.First().ErrorMessage
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
}

@* The form for manual address entry, targeting the ManualAddressEntry action in the AddressController *@
<form asp-controller="Address" asp-action="ManualAddressEntry" method="post" class="govuk-form-group">
    <fieldset class="govuk-fieldset">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h1 class="govuk-fieldset__heading">
                Enter your address manually
            </h1>
        </legend>

        @* Address Line 1 Field *@
        <div class="govuk-form-group @(ViewData.ModelState.ContainsKey(nameof(Model.AddressLine1)) && ViewData.ModelState[nameof(Model.AddressLine1)]?.Errors.Any() == true ? "govuk-form-group--error" : "")">
            <label class="govuk-label" asp-for="AddressLine1">
                Address line 1
            </label>
            @* Display specific error message for AddressLine1 if it exists *@
            <span asp-validation-for="AddressLine1" class="govuk-error-message" id="@(Html.IdFor(m => m.AddressLine1))-error"></span>
            <input class="govuk-input" asp-for="AddressLine1" type="text" autocomplete="address-line1"
                   aria-describedby="@(ViewData.ModelState.ContainsKey(nameof(Model.AddressLine1)) && ViewData.ModelState[nameof(Model.AddressLine1)]?.Errors.Any() == true ? Html.IdFor(m => m.AddressLine1) + "-error" : "")">
        </div>

        @* Address Line 2 Field (Optional) *@
        <div class="govuk-form-group">
            <label class="govuk-label" >
                Address line 2 (optional)
            </label>
            <input class="govuk-input"  type="text" autocomplete="address-line2">
        </div>

        @* Town or City Field *@
        <div class="govuk-form-group @(ViewData.ModelState.ContainsKey(nameof(Model.AddressTown)) && ViewData.ModelState[nameof(Model.AddressTown)]?.Errors.Any() == true ? "govuk-form-group--error" : "")">
            <label class="govuk-label" asp-for="AddressTown">
                Town or city
            </label>
            <span asp-validation-for="AddressTown" class="govuk-error-message" id="@(Html.IdFor(m => m.AddressTown))-error"></span>
            <input class="govuk-input govuk-!-width-two-thirds" asp-for="AddressTown" type="text" autocomplete="address-level2"
                   aria-describedby="@(ViewData.ModelState.ContainsKey(nameof(Model.AddressTown)) && ViewData.ModelState[nameof(Model.AddressTown)]?.Errors.Any() == true ? Html.IdFor(m => m.AddressTown) + "-error" : "")">
        </div>

        @* County Field (Optional) *@
        <div class="govuk-form-group">
            <label class="govuk-label" >
                County (optional)
            </label>
            <input class="govuk-input govuk-!-width-two-thirds" type="text">
        </div>

        @* Postcode Field *@
        <div class="govuk-form-group @(ViewData.ModelState.ContainsKey(nameof(Model.Postcode)) && ViewData.ModelState[nameof(Model.Postcode)]?.Errors.Any() == true ? "govuk-form-group--error" : "")">
            <label class="govuk-label" asp-for="Postcode">
                Postcode
            </label>
            <span asp-validation-for="Postcode" class="govuk-error-message" id="@(Html.IdFor(m => m.Postcode))-error"></span>
            <input class="govuk-input govuk-input--width-10" asp-for="Postcode" type="text" autocomplete="postal-code"
                   aria-describedby="@(ViewData.ModelState.ContainsKey(nameof(Model.Postcode)) && ViewData.ModelState[nameof(Model.Postcode)]?.Errors.Any() == true ? Html.IdFor(m => m.Postcode) + "-error" : "")">
        </div>
        <br />

        <button type="submit" class="govuk-button" data-module="govuk-button">
            Next
        </button>
    </fieldset>
</form>
